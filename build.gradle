plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.2'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.venky'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
//	implementation 'org.springframework.boot:spring-boot-starter-security'
//	testImplementation 'org.springframework.security:spring-security-test'
	implementation 'org.mindrot:jbcrypt:0.4'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.12.6'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.12.6'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.12.6'
	implementation 'jakarta.validation:jakarta.validation-api:3.0.2'
	implementation 'org.hibernate.validator:hibernate-validator:8.0.0.Final'
	implementation 'org.glassfish:jakarta.el:4.0.0'
	implementation 'org.hibernate:hibernate-spatial:6.4.1.Final' // Use the latest version
	implementation 'org.locationtech.jts:jts-core:1.19.0' // JTS for geometry handling
	implementation 'org.n52.jackson:jackson-datatype-jts:1.2.10' // Use this for JTS serialization
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.18.2' // Match this with your Jackson version
	implementation("org.locationtech.jts:jts-core:1.19.0")
	implementation("org.n52.jackson:jackson-datatype-jts:1.2.10")
	implementation("org.hibernate.orm:hibernate-spatial:6.4.4.Final")
}

tasks.named('test') {
	useJUnitPlatform()
}
